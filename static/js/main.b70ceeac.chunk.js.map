{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["QUOTE_DATA_BY_SYMBOL","MSFT","Name","Symbol","LastPrice","Change","ChangePercent","MSDate","MarketCap","Volume","ChangeYTD","ChangePercentYTD","High","Low","Open","BRKA","AAPL","INFO","F","PLT","BIG","TWX","AME","JWN","CVS","MS","MET","App","useState","sym","setSym","time","setTime","foundSymbol","setFoundSymbol","error","setError","change","setChange","changePer","setChangePer","volume","setVolume","open","setOpen","marketCap","setMarketCap","convertLargeNum","labelValue","Math","abs","Number","toFixed","timeZone","DateTime","local","toFormat","getQuote","symbol","a","String","toUpperCase","data","response","Status","Timestamp","Date","timeStamp","toLocaleString","slice","symChange","parseFloat","toString","changePercent","convertVolume","convertOpen","convertMarketCap","Message","Promise","resolve","reject","setTimeout","className","Container","Row","Col","md","sm","InputGroup","FormControl","type","value","onChange","e","keyword","target","placeholder","Text","id","Card","Title","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b70ceeac.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { DateTime } from 'luxon';\nimport { InputGroup, FormControl, Card, Container, Row, Col } from 'react-bootstrap';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport './App.css';\n\n//mock data\nconst QUOTE_DATA_BY_SYMBOL = {\n  MSFT: {\n    Name: 'Microsoft Corp',\n    Symbol: 'MSFT',\n    LastPrice: 72.28,\n    Change: 0.519999999999996,\n    ChangePercent: 0.724637681159415,\n    MSDate: 42891,\n    MarketCap: 558038824200,\n    Volume: 33316760,\n    ChangeYTD: 62.14,\n    ChangePercentYTD: 16.3179916317992,\n    High: 72.89,\n    Low: 71.81,\n    Open: 71.97\n  },\n  BRKA: {\n    Name: 'Berkshire Hathaway Inc',\n    Symbol: 'BRK.A',\n    LastPrice: 249450,\n    Change: -550,\n    ChangePercent: -0.22,\n    MSDate: 42892.6520023148,\n    MarketCap: 191827050000,\n    Volume: 297,\n    ChangeYTD: 244121,\n    ChangePercentYTD: 2.18293387295644,\n    High: 250012,\n    Low: 248650,\n    Open: 249200.01\n  },\n  AAPL: {\n    Name: 'Apple Inc',\n    Symbol: 'AAPL',\n    LastPrice: 153.93,\n    Change: -1.51999999999998,\n    ChangePercent: -0.977806368607258,\n    MSDate: 42891,\n    MarketCap: 802566391200,\n    Volume: 25331662,\n    ChangeYTD: 115.82,\n    ChangePercentYTD: 32.9045069936108,\n    High: 154.45,\n    Low: 153.46,\n    Open: 154.34\n  },\n  INFO: {\n    Name: 'IHS Markit Ltd',\n    Symbol: 'INFO',\n    LastPrice: 46.8,\n    Change: -0.260000000000005,\n    ChangePercent: -0.552486187845315,\n    MSDate: 42891,\n    MarketCap: 19041750000,\n    Volume: 4082775,\n    ChangeYTD: 35.41,\n    ChangePercentYTD: 32.1660547867834,\n    High: 47.2,\n    Low: 46.71,\n    Open: 47.03\n  },\n  F: {\n    Name: 'Ford Motor Co',\n    Symbol: 'F',\n    LastPrice: 11.14,\n    Change: -0.109999999999999,\n    ChangePercent: -0.977777777777773,\n    MSDate: 42892.6552777808,\n    MarketCap: null,\n    Volume: 40054809,\n    ChangeYTD: 12.13,\n    ChangePercentYTD: -8.16158285243199,\n    High: 11.2,\n    Low: 11.05,\n    Open: 11.19\n  },\n  PLT: {\n    Name: 'Plantronics Inc',\n    Symbol: 'PLT',\n    LastPrice: 55.43,\n    Change: -0.18,\n    ChangePercent: -0.323682790864952,\n    MSDate: 42892.6617824084,\n    MarketCap: 1853412910,\n    Volume: 94192,\n    ChangeYTD: 54.76,\n    ChangePercentYTD: 1.22352081811542,\n    High: 55.94,\n    Low: 55.02,\n    Open: 55.44\n  },\n  BIG: {\n    Name: 'Big Lots Inc',\n    Symbol: 'BIG',\n    LastPrice: 48.28,\n    Change: -1.36,\n    ChangePercent: -2.73972602739726,\n    MSDate: 42892.6620949074,\n    MarketCap: 2162268080,\n    Volume: 1253948,\n    ChangeYTD: 50.21,\n    ChangePercentYTD: -3.84385580561641,\n    High: 49.17,\n    Low: 47.99,\n    Open: 49.17\n  },\n  TWX: {\n    Name: 'Time Warner Inc',\n    Symbol: 'TWX',\n    LastPrice: 99.46,\n    Change: -0.240000000000009,\n    ChangePercent: -0.240722166499508,\n    MSDate: 42892.6622916667,\n    MarketCap: 77135009480,\n    Volume: 2953535,\n    ChangeYTD: 96.53,\n    ChangePercentYTD: 3.03532580544908,\n    High: 99.82,\n    Low: 99.44,\n    Open: 99.65\n  },\n  AME: {\n    Name: 'Ametek Inc',\n    Symbol: 'AME',\n    LastPrice: 61.53,\n    Change: -0.269999999999996,\n    ChangePercent: -0.436893203883489,\n    MSDate: 42892.6622569544,\n    MarketCap: 14158545240,\n    Volume: 601580,\n    ChangeYTD: 48.6,\n    ChangePercentYTD: 26.6049382716049,\n    High: 61.76,\n    Low: 61.25,\n    Open: 61.38\n  },\n  JWN: {\n    Name: 'Nordstrom Inc',\n    Symbol: 'JWN',\n    LastPrice: 40.085,\n    Change: -1.565,\n    ChangePercent: -3.75750300120047,\n    MSDate: 42892.6625810225,\n    MarketCap: 6656194420,\n    Volume: 4133041,\n    ChangeYTD: 47.93,\n    ChangePercentYTD: -16.367619445024,\n    High: 41.66,\n    Low: 39.715,\n    Open: 41.51\n  },\n  CVS: {\n    Name: 'CVS Health Corp',\n    Symbol: 'CVS',\n    LastPrice: 77.805,\n    Change: -0.984999999999999,\n    ChangePercent: -1.25015864957482,\n    MSDate: 42892.6627199094,\n    MarketCap: 79267344975,\n    Volume: 3812490,\n    ChangeYTD: 78.91,\n    ChangePercentYTD: -1.40032948929159,\n    High: 78.52,\n    Low: 77.64,\n    Open: 78.41\n  },\n  MS: {\n    Name: 'Morgan Stanley',\n    Symbol: 'MS',\n    LastPrice: 42.995,\n    Change: 0.104999999999997,\n    ChangePercent: 0.244812310561895,\n    MSDate: 42892.6628587963,\n    MarketCap: 79531377090,\n    Volume: 5471583,\n    ChangeYTD: 42.25,\n    ChangePercentYTD: 1.76331360946745,\n    High: 43.07,\n    Low: 42.21,\n    Open: 42.44\n  },\n  MET: {\n    Name: 'Metlife Inc',\n    Symbol: 'MET',\n    LastPrice: 50.425,\n    Change: -0.705000000000005,\n    ChangePercent: -1.37883825542735,\n    MSDate: 42892.6630324074,\n    MarketCap: 54253921525,\n    Volume: 3751545,\n    ChangeYTD: 53.89,\n    ChangePercentYTD: -6.42976433475599,\n    High: 50.83,\n    Low: 50.13,\n    Open: 50.7\n  }\n};\n\nfunction App() {\n\n  const [sym, setSym] = useState('');\n  const [time, setTime] = useState('');\n  const [foundSymbol, setFoundSymbol] = useState({});\n  const [error, setError] = useState('');\n  const [change, setChange] = useState('');\n  const [changePer, setChangePer] = useState('');\n  const [volume, setVolume] = useState('');\n  const [open, setOpen] = useState('');\n  const [marketCap, setMarketCap] = useState(null);\n\n  //function convert numbers to use M and B\n  function convertLargeNum(labelValue) {\n    // Nine Zeroes for Billions\n    return Math.abs(Number(labelValue)) >= 1.0e+9\n      ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n      // Six Zeroes for Millions \n      : Math.abs(Number(labelValue)) >= 1.0e+6\n        ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n        // Three Zeroes for Thousands\n        : Math.abs(Number(labelValue)) >= 1.0e+3\n          ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n          : Math.abs(Number(labelValue));\n  }\n\n  //get Local time zone\n  const timeZone = DateTime.local().toFormat('ZZZZ');\n\n  //get Data\n  const getQuote = async function (symbol) {\n    symbol = String(symbol).toUpperCase();\n    let data = QUOTE_DATA_BY_SYMBOL[symbol];\n\n    let response;\n    if (data) {\n      response = {\n        Status: 'SUCCESS',\n        data: { ...data, Timestamp: new Date() }\n      };\n      //convert time to Locale and return only time\n      const timeStamp = response.data.Timestamp.toLocaleString().slice(11, 24);\n      setTime(timeStamp);\n      setFoundSymbol(data);\n      //set Change and Change Percent 2 decimal places and add + sign if >0\n      const symChange = parseFloat(data.Change.toString()).toFixed(2);\n      if (data.Change > 0) { setChange('+' + symChange) }\n      else { setChange(symChange) }\n      const changePercent = parseFloat(data.ChangePercent.toString()).toFixed(2);\n      if (data.ChangePercent > 0) { setChangePer('+' + changePercent) }\n      else { setChangePer(changePercent) }\n      //convert large numbers to use M and B\n      const convertVolume = convertLargeNum(data.Volume);\n      setVolume(convertVolume);\n      const convertOpen = convertLargeNum(data.Open);\n      setOpen(convertOpen);\n      const convertMarketCap = convertLargeNum(data.MarketCap);\n      //if Market cap = null return nothing (not 0)\n      if (data.MarketCap > 0) { setMarketCap(convertMarketCap) }\n      else { setMarketCap(null) }\n      //remove previous error message and return data\n      setError('');\n      return data;\n\n    } else {\n      response = {\n        Status: 'FAILED',\n        Message: `No symbol matches found for ${symbol}. Try another symbol such as MSFT or AAPL, or use the Lookup API.`\n      };\n      //if error return message and remove previous data\n      setError(response.Message);\n      setFoundSymbol('');\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        data ? resolve(response)\n          : reject(response);\n\n      }, 500);\n    })\n  };\n\n  //search filter\n  const filter = (e) => {\n    const keyword = e.target.value;\n    setSym(keyword);\n    //if keyword run getQuote()\n    if (keyword !== '') {\n      getQuote(keyword);\n      //if empty remove previous data and error message\n    } else {\n      setFoundSymbol('');\n      setError('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col md={4} sm={8}>\n\n            <InputGroup className=\"search-input\">\n              <FormControl\n                aria-label=\"Symbol Lookup\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                type=\"search\"\n                value={sym}\n                onChange={filter}\n                placeholder=\"Symbol Lookup\"\n              />\n              <InputGroup.Text id=\"inputGroup-sizing-default\">\n                <SearchIcon />\n              </InputGroup.Text>\n            </InputGroup>\n\n            <hr className=\"line\" ></hr>\n\n            {!foundSymbol || !sym ? null :\n              <div>\n                <Card.Title className=\"symbolName\">{foundSymbol.Name} ({foundSymbol.Symbol})</Card.Title>\n                <Card.Text className=\"symbolPrice\">\n                  {foundSymbol.LastPrice}\n                  <span style={{ color: foundSymbol.Change > 0 ? \"green\" : \"red\" }} className=\"symbolChange\">\n                    {change} ({changePer}%)\n                  </span>\n                </Card.Text>\n                <Card.Text className=\"symbolTime\">\n                  As of {time}   {timeZone}\n                </Card.Text>\n                {/* <br /> */}\n\n                <hr className=\"tableSep\" />\n                <Card.Text className=\"dataTitle\">Range <span className=\"chartData\">{foundSymbol.Low} - {foundSymbol.High}</span></Card.Text>\n                <hr className=\"tableSep\" />\n                <Card.Text className=\"dataTitle\">Open <span className=\"chartData\">{open}</span></Card.Text>\n                <hr className=\"tableSep\" />\n                <Card.Text className=\"dataTitle\">Volume <span className=\"chartData\">{volume}</span></Card.Text>\n                <hr className=\"tableSep\" />\n                <Card.Text className=\"dataTitle\">Market Cap <span className=\"chartData\">{marketCap}</span></Card.Text>\n                <hr className=\"tableSep\" />\n\n              </div>\n            }\n            <p className=\"errorText\">{error}</p>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}